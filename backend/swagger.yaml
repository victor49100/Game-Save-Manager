openapi: 3.0.0
info:
  title: Game Save API
  version: 1.0.0
  description: API pour la gestion des utilisateurs, jeux, associations et sauvegardes.
servers:
  - url: http://localhost:8000
    description: Local server
paths:
  /addUser/{username}:
    post:
      summary: Ajoute un nouvel utilisateur
      operationId: addUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: Nom de l'utilisateur
      responses:
        '200':
          description: Utilisateur ajouté avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  username:
                    type: string
        '400':
          description: L'utilisateur existe déjà.
  /updateUser/{user_id}:
    put:
      summary: Met à jour un utilisateur existant
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID de l'utilisateur à mettre à jour
        - name: username
          in: query
          required: true
          schema:
            type: string
          description: Nouveau nom de l'utilisateur
      responses:
        '200':
          description: Utilisateur mis à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  updated_username:
                    type: string
        '404':
          description: Utilisateur non trouvé.
  /addGame/{title}/{steam_id}:
    post:
      summary: Ajoute un nouveau jeu
      operationId: addGame
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
          description: Titre du jeu
        - name: steam_id
          in: path
          required: true
          schema:
            type: string
          description: ID Steam du jeu
      responses:
        '200':
          description: Jeu ajouté avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  game_id:
                    type: integer
                  title:
                    type: string
                  steam_id:
                    type: string
        '400':
          description: Le jeu existe déjà.
  /updateGame/{game_id}:
    put:
      summary: Met à jour un jeu existant
      operationId: updateGame
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: integer
          description: ID du jeu à mettre à jour
        - name: title
          in: query
          required: true
          schema:
            type: string
          description: Nouveau titre du jeu
        - name: steam_id
          in: query
          required: true
          schema:
            type: string
          description: Nouveau ID Steam du jeu
      responses:
        '200':
          description: Jeu mis à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  game_id:
                    type: integer
                  updated_title:
                    type: string
                  updated_steam_id:
                    type: string
        '404':
          description: Jeu non trouvé.
  /addUserGame/{user_id}/{game_id}:
    post:
      summary: Associe un jeu à un utilisateur
      operationId: addUserGame
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID de l'utilisateur
        - name: game_id
          in: path
          required: true
          schema:
            type: integer
          description: ID du jeu
      responses:
        '200':
          description: Jeu associé à l'utilisateur avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_game_id:
                    type: integer
                  user_id:
                    type: integer
                  game_id:
                    type: integer
        '400':
          description: L'utilisateur possède déjà ce jeu.
  /addSave/{user_game_id}:
    post:
      summary: Ajoute une sauvegarde pour un jeu d'utilisateur
      operationId: addSave
      parameters:
        - name: user_game_id
          in: path
          required: true
          schema:
            type: integer
          description: ID de l'association entre l'utilisateur et le jeu
        - name: save_path
          in: query
          required: true
          schema:
            type: string
          description: Chemin de la sauvegarde
      responses:
        '200':
          description: Sauvegarde ajoutée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  save_id:
                    type: integer
                  user_game_id:
                    type: integer
                  save_path:
                    type: string
                  save_date:
                    type: string
                    format: date-time
        '400':
          description: La sauvegarde existe déjà.
  /users/:
    get:
      summary: Récupère tous les utilisateurs
      operationId: getAllUsers
      responses:
        '200':
          description: Liste de tous les utilisateurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{user_id}:
    get:
      summary: Récupère un utilisateur par ID
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: ID de l'utilisateur
      responses:
        '200':
          description: Détails de l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Utilisateur non trouvé.
  /games/:
    get:
      summary: Récupère tous les jeux
      operationId: getAllGames
      responses:
        '200':
          description: Liste de tous les jeux
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
  /games/{game_id}:
    get:
      summary: Récupère un jeu par ID
      operationId: getGameById
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: integer
          description: ID du jeu
      responses:
        '200':
          description: Détails du jeu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: Jeu non trouvé.
  /userGames/:
    get:
      summary: Récupère toutes les associations utilisateur-jeu
      operationId: getAllUserGames
      responses:
        '200':
          description: Liste de toutes les associations utilisateur-jeu
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGame'
  /userGames/{user_game_id}:
    get:
      summary: Récupère une association utilisateur-jeu par ID
      operationId: getUserGameById
      parameters:
        - name: user_game_id
          in: path
          required: true
          schema:
            type: integer
          description: ID de l'association utilisateur-jeu
      responses:
        '200':
          description: Détails de l'association utilisateur-jeu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGame'
        '404':
          description: Association utilisateur-jeu non trouvée.
  /saves/:
    get:
      summary: Récupère toutes les sauvegardes
      operationId: getAllSaves
      responses:
        '200':
          description: Liste de toutes les sauvegardes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Save'
  /saves/{save_id}:
    get:
      summary: Récupère une sauvegarde par ID
      operationId: getSaveById
      parameters:
        - name: save_id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la sauvegarde
      responses:
        '200':
          description: Détails de la sauvegarde
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Save'
        '404':
          description: Sauvegarde non trouvée.
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
        username:
          type: string
    Game:
      type: object
      properties:
        game_id:
          type: integer
        title:
          type: string
        steam_id:
          type: string
    UserGame:
      type: object
      properties:
        user_game_id:
          type: integer
        user_id:
          type: integer
        game_id:
          type: integer
    Save:
      type: object
      properties:
        save_id:
          type: integer
        user_game_id:
          type: integer
        save_path:
          type: string
        save_date:
          type: string
          format: date-time

